@using Newtonsoft.Json
@model Sloth.Core.Models.JobRecordBase

<link href="~/css/prism.css" rel="stylesheet" />
<style>
    .console {
        font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
        background-color: #0d3163;
        color: #ffffff;
    }

    .console .line {
        margin: 0;
        line-height: 1.4em;
        min-height: 1.4em;
        font-size: 0.85em;
        word-break: normal;
        overflow-wrap: break-word;
        white-space: pre-wrap;
        vertical-align: top;
    }

    .console .line .time {
        text-align: right;
    }

    .console .line .details {
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }

    .console .line .details * {
        display: inline-block;
    }

    .console .line .details i.view-button {
        opacity: 0;
        cursor: pointer;
    }

    .console .line:hover .details i.view-button {
        opacity: 1;
        display: inline-block;
    }
</style>

<div class="console">
    @foreach (var log in Model.Logs.OrderBy(l => l.Id))
    {
        var time = log.TimeStamp.UtcDateTime - Model.RanOn;
        var timeFormatted = $"{time.TotalSeconds:F3}s";
        if (time < TimeSpan.FromSeconds(1))
        {
            timeFormatted = $"{time.TotalMilliseconds:#}ms";
        }
        <div class="row line">
            <div class="col-1 time">@(timeFormatted)</div>
            <div class="col-10 message">@log.Message</div>
            <div class="col-1 details">
                @if (!string.IsNullOrWhiteSpace(log.Exception))
                {
                    <i class="text-danger fas fa-exclamation-triangle pr-2"></i>
                }
                <i class="fas fa-search fa-xs view-button" data-bs-toggle="modal" data-bs-target="#detailsModal" data-log-id="@log.Id"></i>
            </div>
        </div>
    }
</div>

<div class="modal" tabindex="-1" role="dialog" id="detailsModal">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Log Message Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <pre><code id="detailsModalJson" class="language-json"></code></pre>
                <pre><code id="detailsModalException" class="language-javastacktrace"></code></pre>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/prism.js"></script>
<script>
    var logs = @Html.Raw(JsonConvert.SerializeObject(Model.Logs));

    window.addEventListener('load', function () {

        var $json = $('#detailsModalJson');
        var $exception = $('#detailsModalException');

        $('#detailsModal').on('show.bs.modal',
            function(event) {
                var button = $(event.relatedTarget);
                var id = button.data('log-id');
                var log = logs.find(function(l) { return l.Id === id; });

                // try parse log event
                try {
                    var properties = JSON.parse(log.LogEvent);
                    log.LogEventParsed = properties;
                } catch (err) {
                    // nom
                }

                // set json text
                $json.text(JSON.stringify(log, undefined, 4));

                // set exception
                $exception.text(log.Exception);
                if (log.Exception) {
                    $exception.removeClass('hide').addClass('show');
                } else {
                    $exception.removeClass('show').addClass('hide');
                }

                Prism.highlightAll();
            });
    });
</script>
