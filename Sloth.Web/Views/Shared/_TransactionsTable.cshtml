@using Humanizer
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Routing
@using Sloth.Core.Extensions
@using Sloth.Core.Models
@using Sloth.Core.Resources
@model Sloth.Web.Models.TransactionViewModels.TransactionsTableViewModel
@inject IHttpContextAccessor HttpContextAccessor

@{
    var teamSlug = HttpContextAccessor.HttpContext.GetRouteData().Values["team"] as string;
}

<table id="transactionsTable" class="table sloth-table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().Id)</th>
             <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().Status)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().TransactionDate)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().KfsTrackingNumber)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().DocumentNumber)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().ProcessorTrackingNumber)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().MerchantTrackingNumber)</th>
            <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().Description)</th>
            
           
          
        </tr>
    </thead>
    <tbody>
        @foreach (var t in Model.Transactions)
        {
            var firstDebit = t.Transfers.First(x => x.Direction == Transfer.CreditDebit.Debit);
            var firstCredit = t.Transfers.First(x => x.Direction == Transfer.CreditDebit.Credit);
            var description = firstDebit.Description;

            <tr data-href="/@teamSlug/Transactions/Details/@t.Id">
                <th scope="row">@t.Id</th>
                <td>
                    <span class="badge @(TransactionStatuses.GetBadgeClass(t.Status))">@t.Status.Humanize(LetterCasing.Title)</span>
                </td>
                <td nowrap data-sort="@t.TransactionDate.Ticks">@t.TransactionDate.ToPacificTime()</td>
                <td>@t.KfsTrackingNumber</td>
                <td>@t.DocumentNumber</td>
                <td>@t.ProcessorTrackingNumber</td>
                <td>@t.MerchantTrackingNumber</td>
                <td>@description</td>
                @* @if (String.IsNullOrWhiteSpace(firstDebit.FinancialSegmentString))
                {
                    <td>@($"{firstDebit.Chart}-{firstDebit.Account}") -> @($"{firstCredit.Chart}-{firstCredit.Account}")</td>
                }
                else
                {
                    <td>See Details</td>
                }
                 *@
                
                @* <td>
                    <a asp-controller="Transactions" asp-action="Details" asp-route-id="@t.Id" class="btn btn-primary btn-sm" target="_blank">
                        <span style="white-space:nowrap">
                            <span class="fa-layers">
                                <i class="fa fa-info"></i>
                                <i class="fa fa-external-link-alt" data-fa-transform="shrink-8 up-8 right-8"></i>
                            </span>
                            &nbsp;Details
                        </span>
                    </a>
                    @if (Model.HasWebhooks)
                    {
                        <button id="callWebHook" class="btn btn-danger btn-sm">
                            <span style="white-space: nowrap">
                                <i class="fa fa-redo-alt"></i>&nbsp;WebHook
                            </span>
                        </button>
                    }
                </td> *@
            </tr>
        }
    </tbody>
</table>
