@model Sloth.Web.Models.ReportViewModels.TransfersReportViewModel

@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Routing
@inject IHttpContextAccessor HttpContextAccessor
@{
    var teamSlug = HttpContextAccessor.HttpContext.GetRouteData().Values["team"] as string;
}


<div class="container">
    <h2>@ViewBag.Title</h2>

    <h3>Filters</h3>
    <form class="row" id="transactionFilterForm" asp-controller="Reports" asp-action="DownloadableTransactions" method="get">
        <div class="row justify-content-between filters-wrapper">
            <div class="col-8 col-md-5">
                <div id="filter-date-range" class="input-group">
                    <input name="from" type="text" class="form-control" placeholder="MM/DD/YYYY" asp-for="Filter.From" asp-format="{0:MM/dd/yyyy}" aria-label="" />
                    <span class="input-group-text">to</span>
                    <input name="to" type="text" class="form-control" placeholder="MM/DD/YYYY" asp-for="Filter.To" asp-format="{0:MM/dd/yyyy}" aria-label="" />
                </div>

                <button type="submit" class="btn btn-link mt-1">Apply filter</button>
            </div>

        </div>
    </form>

    <div class="responsive-table">
        <table id="transactionsTable" class="table sloth-table active-table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().Id)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().DisplayId)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().Status)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().TransactionDate)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().KfsTrackingNumber)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().DocumentNumber)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().ProcessorTrackingNumber)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().MerchantTrackingNumber)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().TxnDescription)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().MetaDataString)</th>
                    <th>@Html.DisplayNameFor(x => x.Transactions.FirstOrDefault().TransferCount)</th>
                    <th>Total Amount</th>
                    <th>Direction</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Chart String</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var txn in Model.Transactions)
                {
                    @foreach (var transfer in txn.Transfers)
                    {
                        <tr>
                            <td>@txn.Id</td>
                            <td>@txn.DisplayId</td>
                            <td>@txn.Status</td>
                            <td>@txn.TransactionDate</td>
                            <td>@txn.KfsTrackingNumber</td>
                            <td>@txn.DocumentNumber</td>
                            <td>@txn.ProcessorTrackingNumber</td>
                            <td>@txn.MerchantTrackingNumber</td>
                            <td>@txn.TxnDescription</td>
                            <td>@txn.MetaDataString</td>
                            <td>@txn.TransferCount</td>
                            <td>@txn.Amount</td>
                            <td><span class="badge @(Transfer.GetDirectionBadgeClass(transfer.Direction))">@transfer.Direction</span></td>
                            <td>@transfer.Description</td>
                            <td>@transfer.Amount</td>
                            <td>@transfer.FinancialSegmentString</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

    </div>

</div>
