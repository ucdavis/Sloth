@using Humanizer
@using Sloth.Core.Extensions
@using Sloth.Core.Models
@using Sloth.Core.Resources
@using Sloth.Web.Models.TransactionViewModels
@model TransactionDetailsViewModel

@{
    ViewBag.Title = "Edit Transaction";

    Uri merchantUrl;
    var isUrlValid = Uri.TryCreate(Model.Transaction.MerchantTrackingUrl, UriKind.Absolute, out merchantUrl);
}

<div class="container">

        <h2>@ViewBag.Title</h2>


    <partial name="_AeEditDetails" model="Model" />


<div class="row mt-5">
    <h2>Activity Timeline</h2>
    @foreach (var activity in Model.Transaction.StatusEvents.OrderBy(a => a.EventDate))
    {
        <div class="txn-timeline-row">
            <div class="txn-timeline-date">
                <span>@activity.EventDate.ToPacificTime().ToString("g")</span>
            </div>
            <div class="txn-timeline-result">
                    <span class="badge @(TransactionStatuses.GetBadgeClass(activity.Status))">@activity.Status.Humanize(LetterCasing.Title)</span> <span>@activity.EventDetails</span>
            </div>
        </div>
    }
</div>

@if (Model.RelatedTransactions.Transactions.Any())
{
    <div class="row mt-5">
    <h2>Related Transactions</h2>
    <partial name="_TransactionsTable" model="Model.RelatedTransactions" />
    </div>
}

@if (Model.RelatedBlobs.Blobs.Any())
{
    <div class="row mt-5">
    <h2>Related Files</h2>
    <partial name="_BlobsTable" model=@Model.RelatedBlobs />
    </div>
}

</div>


 @section AdditionalScripts {
    <script src="~/js/prism.js"></script>
    <script src="https://finjector.ucdavis.edu/finjector.js?v=3" type="text/javascript" asp-add-nonce="true"></script>
    <script>
        $('#transfers').DataTable({
            "columnDefs": [
                { "targets": 0, "visible": false }
            ],
            "paging": false,
            "info": false,
            //"searching": false,
            "order": [[1, 'desc'],[2, 'desc']],
            searching: false,
        });

        $('.transfer-date-edit').each((index, elem) => {
            const input = $(elem).find('input')
            $(elem).datepicker({
              inputs: input,
              keepEmptyValues: true,
            });
        });

        $('.transfer-ccoa-edit').each((index, elem) => {
            $($(elem).parent()).find('button').on('click', async (e) => {
                const chart = await window.Finjector.findChartSegmentString("https://finjector.ucdavis.edu/landing");
                if (chart && chart.status === "success") {
                    $(elem).val(chart.data);
                }
                else {
                    alert("Something went wrong with the CCOA picker")
                }
                return false;
            });
        });
    </script>
    @if (Model.RelatedTransactions.Transactions.Any())
    {
        <partial name="_TransactionsTableScript" />
    }
    @if (Model.RelatedBlobs.Blobs.Any())
    {
        <partial name="_BlobsTableScript" />
    }
}

@section AdditionalStyles
{
    <style>
      .transfer-date-edit { }
      .transfer-ccoa-edit { }
      .force-upper{
          text-transform: uppercase;
      }
    </style>
}
