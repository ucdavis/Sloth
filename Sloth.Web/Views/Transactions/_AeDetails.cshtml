@using Sloth.Core.Extensions
@using Sloth.Core.Models
@using Sloth.Core.Resources
@model Transaction

@{
    ViewBag.Title = "Transaction Details";

    Uri merchantUrl;
    var isUrlValid = Uri.TryCreate(Model.MerchantTrackingUrl, UriKind.Absolute, out merchantUrl);
}
<div class="row txn-detail-wrapper">
  <div class="txn-detail-row">
        <div class="txn-detail-label">
            <span>@Html.DisplayNameFor(x => x.Id)</span>
        </div>
        <div class="txn-detail-result">
            <span>@Model.Id</span>
        </div>
    </div>
    <div class="txn-detail-row">
        <div class="txn-detail-label">
            <span>@Html.DisplayNameFor(x => x.TransactionDate)</span>
        </div>
        <div class="txn-detail-result">
            <span>@Model.TransactionDate.ToPacificTime()</span>
        </div>
    </div>
     <div class="txn-detail-row">
        <div class="txn-detail-label">
            <span>@Html.DisplayNameFor(x => x.KfsTrackingNumber)</span>
        </div>
        <div class="txn-detail-result">
            <span>@Model.KfsTrackingNumber</span>
        </div>
    </div>
     @if (Model.JournalRequest != null)
        {
        <div class="txn-detail-row">
            <div class="txn-detail-label">
                <span>@Html.DisplayNameFor(x => x.JournalRequest.RequestId)</span>
            </div>
            <div class="txn-detail-result">
                <span>@Model.JournalRequest.RequestId</span>
            </div>
        </div>
        }
        <div class="txn-detail-row">
            <div class="txn-detail-label">
                <span>@Html.DisplayNameFor(x => x.ProcessorTrackingNumber)</span>
            </div>
            <div class="txn-detail-result">
                <span>@Model.ProcessorTrackingNumber</span>
            </div>
        </div>
        <div class="txn-detail-row">
            <div class="txn-detail-label">
                <span>@Html.DisplayNameFor(x => x.MerchantTrackingNumber)</span>
            </div>
            <div class="txn-detail-result">
                <span>@Model.MerchantTrackingNumber</span>
            </div>
        </div>
        <div class="txn-detail-row">
            <div class="txn-detail-label">
                <span>@Html.DisplayNameFor(x => x.Status)</span>
            </div>
            <div class="txn-detail-result">
                <span class="badge badge-completed">@Model.Status</span>
            </div>
        </div>
         @{
            if (isUrlValid)
            {
                <div class="txn-detail-row">
            <div class="txn-detail-label">
                <span>@Html.DisplayNameFor(x => x.MerchantTrackingUrl)</span>
            </div>
            <div class="txn-detail-result">
                <span><a href="@Html.Raw(merchantUrl.ToString())" target="_blank">@merchantUrl.ToString()</a></span>
            </div>
        </div>
            }
        }
</div>


<table id="transfers" class="table sloth-table" style="width: 100%">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].Id)</th>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].Amount)</th>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].Direction)</th>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].Description)</th>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].AccountingDate)</th>
            <th>@Html.DisplayNameFor(x => x.Transfers[0].Account)</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var t in Model.Transfers)
        {
            <tr>
                <td>@t.Id</td>
                <td>@t.Amount.ToString("C")</td>
                <td>
                    <span class="badge @(Transfer.GetDirectionBadgeClass(t.Direction))">@t.Direction</span>
                </td>
                <td>@t.Description</td>
                <td>@t.AccountingDate</td>
                <td style="white-space:nowrap">@t.FinancialSegmentString</td>
            </tr>
        }
    </tbody>
</table>



@if (Model.Status == TransactionStatuses.PendingApproval)
{
    <form asp-controller="Transactions" asp-action="ScheduleTransaction" asp-route-id="@Model.Id" method="post">
        <div class="d-flex justify-content-end align-items-center">
            <button type="submit" class="btn btn-small btn-primary">Approve</button>
        </div>
    </form>
}

@if (Model.Status == TransactionStatuses.Completed && !Model.HasReversal)
{
    var reversalAmount = Model.Transfers.Where(x => x.Direction == Transfer.CreditDebit.Credit).Sum(x => x.Amount);
    <div class="float-right">
      <form asp-controller="Transactions" asp-action="CreateReversal" asp-route-id="@Model.Id" method="post" class="form-inline">
        <label for="reversalAmount">Reversal Amount</label>
        <div class="input-group ml-2">
          <div class="input-group-prepend">
            <div class="input-group-text">$</div>
          </div>
          <input type="text" class="form-control" style="width: 150px;" id="reversalAmount" name="reversalAmount" value="@reversalAmount" />
        </div>
        <button type="submit" class="btn btn-primary ml-2">Reverse Transaction</button>
      </form>
    </div>
}


