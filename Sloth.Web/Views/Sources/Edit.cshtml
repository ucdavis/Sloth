@using Sloth.Core.Models;
@using Sloth.Core.Resources
@model Sloth.Web.Models.SourceViewModels.EditSourceViewModel

@{
    ViewBag.Title = "Edit Source";

    var teams = ViewBag.Teams as IEnumerable<Team>;
    var teamItems = teams?.Select(t => new SelectListItem() { Text = t.Name, Value = t.Id });

    var documentTypes = DocumentTypes.GetAll().Select(t => new SelectListItem() { Text = t, Value = t });
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(FormMethod.Post))
{
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "ex: Test Team Recharge Source" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Type)
        @Html.TextBoxFor(x => x.Type, new { @class = "form-control", placeholder = "ex: Cybersource, Recharge, etc" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Description)
        @Html.TextBoxFor(x => x.Description, new { @class = "form-control", placeholder = "ex: External Recharge Income" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Chart)
        @Html.TextBoxFor(x => x.Chart, new { @class = "form-control", placeholder = "XX" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.OrganizationCode)
        @Html.TextBoxFor(x => x.OrganizationCode, new { @class = "form-control", placeholder = "XXXX" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.OriginCode)
        @Html.TextBoxFor(x => x.OriginCode, new { @class = "form-control", placeholder = "XX" })
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.DocumentType)
        @Html.DropDownListFor(x => x.DocumentType, documentTypes, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.KfsFtpUsername)
        @Html.TextBoxFor(x => x.KfsFtpUsername, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.KfsFtpPasswordKey)
        @Html.HiddenFor(x => x.KfsFtpPasswordKeyDirty)
        <div class="input-group">
            @Html.PasswordFor(x => x.KfsFtpPasswordKey, new { @class = "form-control", value = "password", @readonly = true })
            <div class="input-group-append">
                <div id="kfs-ftp-password-key-clear" class="btn btn-danger" data-toggle="modal" data-target="#passwordModal">
                    <i class="fa fa-edit"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-end align-items-end">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
}

<div class="modal fade" id="passwordModal" tabindex="-1" role="dialog" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Upload Private Key</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <textarea id="passwordModalInput" class="form-control text-monospace"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="passwordModalSave">Save</button>
            </div>
        </div>
    </div>
</div>

@section AdditionalScripts
{
    <script>
        $(function() {
            var $modal = $('#passwordModal');
            var $input = $('#passwordModalInput');
            var $target = $('#KfsFtpPasswordKey');
            var $dirt = $('#KfsFtpPasswordKeyDirty');

            $modal.on('show.bs.modal', function () {
                $input.val('');
            });

            $('#passwordModalSave').click(function () {
                var key = $input.val();
                var encoded = btoa(key);
                $target.val(encoded);
                $dirt.val('True');
                $modal.modal('hide');
            });
        });
    </script>
}
